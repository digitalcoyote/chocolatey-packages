<?xml version="1.0" encoding="utf-8"?>
<!-- Read this before creating packages: https://chocolatey.org/docs/create-packages -->
<!-- It is especially important to read the above link to understand additional requirements when publishing packages to the community feed aka dot org (https://chocolatey.org/packages). -->

<!-- Test your packages in a test environment: https://github.com/chocolatey/chocolatey-test-environment -->

<!--
This is a nuspec. It mostly adheres to https://docs.nuget.org/create/Nuspec-Reference. Chocolatey uses a special version of NuGet.Core that allows us to do more than was initially possible. As such there are certain things to be aware of:

* the package xmlns schema url may cause issues with nuget.exe
* Any of the following elements can ONLY be used by choco tools - projectSourceUrl, docsUrl, mailingListUrl, bugTrackerUrl, packageSourceUrl, provides, conflicts, replaces 
* nuget.exe can still install packages with those elements but they are ignored. Any authoring tools or commands will error on those elements 
-->

<!-- You can embed software files directly into packages, as long as you are not bound by distribution rights. -->
<!-- * If you are an organization making private packages, you probably have no issues here -->
<!-- * If you are releasing to the community feed, you need to consider distribution rights. -->
<!-- Do not remove this test for UTF-8: if “Ω” doesn’t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <!-- == PACKAGE SPECIFIC SECTION == -->
    <!-- This section is about this package, although id and version have ties back to the software -->
    <!-- id is lowercase and if you want a good separator for words, use '-', not '.'. Dots are only acceptable as suffixes for certain types of packages, e.g. .install, .portable, .extension, .template -->
    <!-- If the software is cross-platform, attempt to use the same id as the debian/rpm package(s) if possible. -->
    <id>syncplay</id>
    <!-- version should MATCH as closely as possible with the underlying software -->
    <!-- Is the version a prerelease of a version? https://docs.nuget.org/create/versioning#creating-prerelease-packages -->
    <!-- Note that unstable versions like 0.0.1 can be considered a released version, but it's possible that one can release a 0.0.1-beta before you release a 0.0.1 version. If the version number is final, that is considered a released version and not a prerelease. -->
    <version>1.7.4</version>
    <packageSourceUrl>https://github.com/digitalcoyote/chocolatey-packages</packageSourceUrl>
    <!-- owners is a poor name for maintainers of the package. It sticks around by this name for compatibility reasons. It basically means you. -->
    <owners>codingcoyote</owners>
    <!-- ============================== -->

    <!-- == SOFTWARE SPECIFIC SECTION == -->
    <!-- This section is about the software itself -->
    <title>Syncplay</title>
    <!-- projectUrl is required for the community feed -->
    <projectUrl>https://syncplay.pl/</projectUrl>
    <!-- <iconUrl></iconUrl> -->
    <!-- <copyright>Year Software Vendor</copyright> -->
    <!-- If there is a license Url available, it is required for the community feed -->
    <iconUrl>https://rawcdn.githack.com/Syncplay/syncplay/03cde67c72d401c5c656a6cd2bb55c2da5af8026/syncplay/resources/syncplay.png</iconUrl>
    <licenseUrl>https://github.com/Syncplay/syncplay/blob/master/LICENSE</licenseUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <projectSourceUrl>https://github.com/Syncplay/syncplay</projectSourceUrl>
    <docsUrl>https://syncplay.pl/guide/</docsUrl>
    <!--<mailingListUrl></mailingListUrl>-->
    <bugTrackerUrl>https://github.com/Syncplay/syncplay/issues</bugTrackerUrl>
    <authors>syncplay</authors>
    <tags>syncplay vlc mpv mpc-hc mplayer2 server synchronize playback notSilent</tags>
    <summary>Solution to synchronize video playback across multiple instances of mpv, VLC, MPC-HC, MPC-BE and mplayer2 over the Internet.</summary>
    <description>Syncplay allows people to enjoy a shared viewing experience even if they are thousands of miles apart, so friends can watch anime, movies, TV shows and other media together. The Syncplay Client launches a media player on your computer, connects to a Syncplay server and joins a virtual room on that server. Pauses, unpauses and seeks made within that media player instance are relayed to fellow viewers via the server to allow for these actions to be replicated by the media players of everyone else in the same virtual room. The server keeps track of where everyone is in the video so if someone joins they can be brought to the right place, and so if someone is too far ahead they can be brought back in sync.

Syncplay can also share information about what files people are playing to make it easier for viewers to confirm they are playing the same file (or be warned if they are playing different files). Users can choose what file information is sent to the server in plain text, sent hashed, or not sent at all. Official public Syncplay servers operate in ‘room isolation’ mode, meaning any information sent by clients is only passed on to others in the same virtual room, and people cannot see what rooms currently exist. People can run their own private password protected Syncplay server.
    
#### Package Parameters

The 'Lang' package parameter can be set to change the installation Language (Defaults to English):
* 1031 - German
* 1033 - English
* 1034 - Spanish
* 1036 - French (not yet implemented)
* 1040 - Italian
* 1045 - Polish (not yet implemented)
* 1046 - Brazilian Portuguese
* 1049 - Russian
* 1055 - Turkish
* 2070 - European Portuguese

To pass parameters, use `--params "''"` (e.g. `choco install syncplay [other options] --params="'/Lang:1031'"`).
To have choco remember parameters on upgrade, be sure to set `choco feature enable -n=useRememberedArgumentsForUpgrades`.</description>
    
    <releaseNotes>https://syncplay.pl/changelog/</releaseNotes>
    <!-- =============================== -->      

    <!-- Specifying dependencies and version ranges? https://docs.nuget.org/create/versioning#specifying-version-ranges-in-.nuspec-files -->
    <!-- <dependencies>
      <dependency id="chocolatey-core.extension" version="1.0.4"/>
    </dependencies> -->
    <!-- chocolatey-core.extension - https://chocolatey.org/packages/chocolatey-core.extension
         - You want to use Get-UninstallRegistryKey on less than 0.9.10 (in chocolateyUninstall.ps1)
         - You want to use Get-PackageParameters and on less than 0.11.0
         - You want to take advantage of other functions in the core community maintainer's team extension package
    -->

    <!--<provides>NOT YET IMPLEMENTED</provides>-->
    <!--<conflicts>NOT YET IMPLEMENTED</conflicts>-->
    <!--<replaces>NOT YET IMPLEMENTED</replaces>-->
  </metadata>
  <files>
    <!-- this section controls what actually gets packaged into the Chocolatey package -->
    <file src="tools\**" target="tools" />
    <!--Building from Linux? You may need this instead: <file src="tools/**" target="tools" />-->
  </files>
</package>
